<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.anjz.core.dao.SysUserDao">

	<resultMap id="BaseResultMap" type="com.anjz.core.model.SysUser">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="user_password" property="userPassword" jdbcType="VARCHAR" />
			<result column="user_salt" property="userSalt" jdbcType="VARCHAR" />
			<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
			<result column="user_email" property="userEmail" jdbcType="VARCHAR" />
			<result column="user_create_time" property="userCreateTime" jdbcType="TIMESTAMP" />
			<result column="status" property="status" jdbcType="VARCHAR" />
			<result column="deleted" property="deleted" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id,
		user_name,
		user_password,
		user_salt,
		user_phone,
		user_email,
		user_create_time,
		status,
		deleted
	</sql>

	<sql id="conditions_sysUser">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="userName != null">
				and user_name = #{userName}
			</if>
			<if test="userPassword != null">
				and user_password = #{userPassword}
			</if>
			<if test="userSalt != null">
				and user_salt = #{userSalt}
			</if>
			<if test="userPhone != null">
				and user_phone = #{userPhone}
			</if>
			<if test="userEmail != null">
				and user_email = #{userEmail}
			</if>
			<if test="userCreateTime != null">
				and user_create_time = #{userCreateTime}
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="deleted != null">
				and deleted = #{deleted}
			</if>
		</where>
	</sql>
	
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
		<include refid="Base_Column_List" />
		from sys_user
		<where>
			  and id=#{id}
		</where>
	</select>
	
	<select id="find" resultMap="BaseResultMap" parameterType="com.anjz.core.model.SysUser">
		select 
		<include refid="Base_Column_List" />
		from sys_user
		<include refid="conditions_sysUser" />
	</select>

	<delete id="deleteById" parameterType="java.lang.String">
		delete from sys_user
		<where>
			  and id=#{id}
		</where>
	</delete>
	
	<delete id="batchDeleteByIds" parameterType="java.lang.String">
		delete from sys_user
		<where>
			and id in
			<foreach collection="array" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>
	</delete>

	<insert id="insert" parameterType="com.anjz.core.model.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			user_name,
			user_password,
			user_salt,
			user_phone,
			user_email,
			user_create_time,
			status,
			deleted,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{userName},
			#{userPassword},
			#{userSalt},
			#{userPhone},
			#{userEmail},
			#{userCreateTime},
			#{status},
			#{deleted},
		</trim>
	</insert>

	<insert id="insertSelective" parameterType="com.anjz.core.model.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="userName != null">user_name,</if>
			<if test="userPassword != null">user_password,</if>
			<if test="userSalt != null">user_salt,</if>
			<if test="userPhone != null">user_phone,</if>
			<if test="userEmail != null">user_email,</if>
			<if test="userCreateTime != null">user_create_time,</if>
			<if test="status != null">status,</if>
			<if test="deleted != null">deleted,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="userName != null">#{userName},</if>
			<if test="userPassword != null">#{userPassword},</if>
			<if test="userSalt != null">#{userSalt},</if>
			<if test="userPhone != null">#{userPhone},</if>
			<if test="userEmail != null">#{userEmail},</if>
			<if test="userCreateTime != null">#{userCreateTime},</if>
			<if test="status != null">#{status},</if>
			<if test="deleted != null">#{deleted},</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.anjz.core.model.SysUser">
		update sys_user
		<set>
			user_name=#{userName},
			user_password=#{userPassword},
			user_salt=#{userSalt},
			user_phone=#{userPhone},
			user_email=#{userEmail},
			user_create_time=#{userCreateTime},
			status=#{status},
			deleted=#{deleted},
		</set>
		<where>
			  and id=#{id}
		</where>
	</update>

	

	<update id="updateByIdSelective" parameterType="com.anjz.core.model.SysUser">
		update sys_user
		<set>
			<if test="userName != null">user_name=#{userName},
			</if>
			<if test="userPassword != null">user_password=#{userPassword},
			</if>
			<if test="userSalt != null">user_salt=#{userSalt},
			</if>
			<if test="userPhone != null">user_phone=#{userPhone},
			</if>
			<if test="userEmail != null">user_email=#{userEmail},
			</if>
			<if test="userCreateTime != null">user_create_time=#{userCreateTime},
			</if>
			<if test="status != null">status=#{status},
			</if>
			<if test="deleted != null">deleted=#{deleted},
			</if>
		</set>
		<where>
			  and id=#{id}
		</where>
	</update>
	
	<!-- 分页、条件查询、排序 -->
	<sql id="or_filters">
		<foreach collection="searchFilter.orFilters" item="orFilter" open="(" separator="or" close=")">
			<choose>
				<when test='orFilter.operator.info == "前缀模糊匹配"'>
					${orFilter.searchProperty} like concat('%', #{orFilter.value})
				</when>
				<when test='orFilter.operator.info == "前缀模糊不匹配"'>
					${orFilter.searchProperty} not like concat('%', #{orFilter.value})
				</when>
				<when test='orFilter.operator.info == "后缀模糊匹配"'>
					${orFilter.searchProperty} like concat(#{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "后缀模糊不匹配"'>
					${orFilter.searchProperty} not like concat(#{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "模糊匹配"'>
					${orFilter.searchProperty} like concat('%', #{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "不匹配"'>
					${orFilter.searchProperty} not like concat('%', #{orFilter.value},'%')
				</when>
				<!-- is null is not null -->
				<when test='orFilter.operator.info == "空" or  orFilter.operator.info == "非空"'>
					${orFilter.searchProperty} ${orFilter.operator.symbol}
				</when>
				<!-- in not in -->
				<when test='orFilter.operator.info == "包含" or orFilter.operator.info == "不包含"'>
					${orFilter.searchProperty} ${orFilter.operator.symbol}
					<foreach collection="orFilter.value" item="value" open="(" separator="," close=")">
						#{value}
					</foreach>
				</when>
				<otherwise>
					 ${orFilter.searchProperty} ${orFilter.operator.symbol} #{orFilter.value}
				</otherwise>
			</choose>
		</foreach>
	</sql>
	
	<sql id="and_filters">
		<foreach collection="searchFilter.andFilters" item="andFilter" open="(" separator="and" close=")">
			<choose>
				<when test='andFilter.operator.info == "前缀模糊匹配"'>
					${andFilter.searchProperty} like concat('%', #{andFilter.value})
				</when>
				<when test='andFilter.operator.info == "前缀模糊不匹配"'>
					${andFilter.searchProperty} not like concat('%', #{andFilter.value})
				</when>
				<when test='andFilter.operator.info == "后缀模糊匹配"'>
					${andFilter.searchProperty} like concat(#{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "后缀模糊不匹配"'>
					${andFilter.searchProperty} not like concat(#{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "模糊匹配"'>
					${andFilter.searchProperty} like concat('%', #{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "不匹配"'>
					${andFilter.searchProperty} not like concat('%', #{andFilter.value},'%')
				</when>
				<!-- is null is not null -->
				<when test='andFilter.operator.info == "空" or  andFilter.operator.info == "非空"'>
					${andFilter.searchProperty} ${andFilter.operator.symbol}
				</when>
				<!-- in not in -->
				<when test='andFilter.operator.info == "包含" or andFilter.operator.info == "不包含"'>
					${andFilter.searchProperty} ${andFilter.operator.symbol}
					<foreach collection="andFilter.value" item="value" open="(" separator="," close=")">
						#{value}
					</foreach>
				</when>
				<otherwise>
					 ${andFilter.searchProperty} ${andFilter.operator.symbol} #{andFilter.value}
				</otherwise>
			</choose>
		</foreach>
	</sql>
	
	<sql id="common_filter">
		<choose>
			<when test='searchFilter.operator.info == "前缀模糊匹配"'>
				 ${searchFilter.searchProperty} like concat('%', #{searchFilter.value})
			</when>
			<when test='searchFilter.operator.info == "前缀模糊不匹配"'>
				 ${searchFilter.searchProperty} not like concat('%',#{searchFilter.value})
			</when>
			<when test='searchFilter.operator.info == "后缀模糊匹配"'>
				 ${searchFilter.searchProperty} like concat(#{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "后缀模糊不匹配"'>
				 ${searchFilter.searchProperty} not like concat(#{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "模糊匹配"'>
				 ${searchFilter.searchProperty} like concat('%', #{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "不匹配"'>
				${searchFilter.searchProperty} not like concat('%',#{searchFilter.value},'%')
			</when>
			<!-- is null is not null -->
			<when test='searchFilter.operator.info == "空" or  searchFilter.operator.info == "非空"'>
			    ${searchFilter.searchProperty} ${searchFilter.operator.symbol}
			</when>
			<!-- in not in -->
			<when test='searchFilter.operator.info == "包含" or searchFilter.operator.info == "不包含"'>
				 ${searchFilter.searchProperty} ${searchFilter.operator.symbol}
				<foreach collection="searchFilter.value" item="value" open="(" separator="," close=")">
					#{value}
				</foreach>
			</when>
			<otherwise>
				 ${searchFilter.searchProperty} ${searchFilter.operator.symbol} #{searchFilter.value}
			</otherwise>
		</choose>
	</sql>
	
	<!-- 分页、排序 -->
	<select id="findAll" parameterType="com.anjz.base.entity.search.Searchable" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<where>
			<if test="searchFilters != null and searchFilters.size > 0">
				<foreach collection="searchFilters" item="searchFilter" separator="and ">
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.OrCondition and searchFilter.orFilters.size > 0">
						<include refid="or_filters" />
					</if>
	
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.AndCondition  and searchFilter.andFilters.size > 0">
						<include refid="and_filters" />
					</if>
		
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.Condition">
						<include refid="common_filter" />
					</if>	
				</foreach>
			</if>
		</where>
	
		<if test="sort!=null">
			<if test="sort.orders != null and sort.orders.size > 0">
				order by
				<foreach collection="sort.orders" item="order" separator=",">
					${order.property} ${order.direction}
				</foreach>
			</if>
		</if>
	
		<if test="page!=null">
			limit #{page.offset},#{page.size}
		</if>
	</select>
	
	<select id="count" parameterType="com.anjz.base.entity.search.Searchable" resultType="long">
		select count(*)
		from sys_user
		<where>
			<if test="searchFilters != null and searchFilters.size > 0">
				<foreach collection="searchFilters" item="searchFilter" separator="and ">
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.OrCondition and searchFilter.orFilters.size > 0">
						<include refid="or_filters" />
					</if>
	
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.AndCondition  and searchFilter.andFilters.size > 0">
						<include refid="and_filters" />
					</if>
		
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.Condition">
						<include refid="common_filter" />
					</if>	
				</foreach>
			</if>
		</where>
	</select>
</mapper>