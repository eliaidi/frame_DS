<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.anjz.core.dao.PersonalMessageDao">

	<resultMap id="BaseResultMap" type="com.anjz.core.model.PersonalMessage">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="sender_id" property="senderId" jdbcType="VARCHAR" />
			<result column="receiver_id" property="receiverId" jdbcType="VARCHAR" />
			<result column="send_date" property="sendDate" jdbcType="TIMESTAMP" />
			<result column="title" property="title" jdbcType="VARCHAR" />
			<result column="content" property="content" jdbcType="VARCHAR" />
			<result column="sender_state" property="senderState" jdbcType="VARCHAR" />
			<result column="sender_state_change_date" property="senderStateChangeDate" jdbcType="TIMESTAMP" />
			<result column="receiver_state" property="receiverState" jdbcType="VARCHAR" />
			<result column="receiver_state_change_date" property="receiverStateChangeDate" jdbcType="TIMESTAMP" />
			<result column="type" property="type" jdbcType="VARCHAR" />
			<result column="is_read" property="isRead" jdbcType="VARCHAR" />
			<result column="is_replied" property="isReplied" jdbcType="VARCHAR" />
			<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
			<result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
			id,
			sender_id,
			receiver_id,
			send_date,
			title,
			content,
			sender_state,
			sender_state_change_date,
			receiver_state,
			receiver_state_change_date,
			type,
			is_read,
			is_replied,
			parent_id,
			parent_ids
	</sql>

	<sql id="conditions_personalMessage">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="senderId != null">
				and sender_id = #{senderId}
			</if>
			<if test="receiverId != null">
				and receiver_id = #{receiverId}
			</if>
			<if test="sendDate != null">
				and send_date = #{sendDate}
			</if>
			<if test="title != null">
				and title = #{title}
			</if>
			<if test="content != null">
				and content = #{content}
			</if>
			<if test="senderState != null">
				and sender_state = #{senderState}
			</if>
			<if test="senderStateChangeDate != null">
				and sender_state_change_date = #{senderStateChangeDate}
			</if>
			<if test="receiverState != null">
				and receiver_state = #{receiverState}
			</if>
			<if test="receiverStateChangeDate != null">
				and receiver_state_change_date = #{receiverStateChangeDate}
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
			<if test="isRead != null">
				and is_read = #{isRead}
			</if>
			<if test="isReplied != null">
				and is_replied = #{isReplied}
			</if>
			<if test="parentId != null">
				and parent_id = #{parentId}
			</if>
			<if test="parentIds != null">
				and parent_ids = #{parentIds}
			</if>
		</where>
	</sql>
	
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
		<include refid="Base_Column_List" />
		from personal_message
		<where>
			  and id=#{id}
		</where>
	</select>
	
	<select id="find" resultMap="BaseResultMap" parameterType="com.anjz.core.model.PersonalMessage">
		select 
		<include refid="Base_Column_List" />
		from personal_message
		<include refid="conditions_personalMessage" />
	</select>

	<delete id="deleteById" parameterType="java.lang.String">
		delete from personal_message
		<where>
			  and id=#{id}
		</where>
	</delete>
	
	<delete id="batchDeleteByIds" parameterType="java.lang.String">
		delete from personal_message
		<where>
			  and id in 
			  <foreach collection="array" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>
	</delete>

	<insert id="insert" parameterType="com.anjz.core.model.PersonalMessage">
		insert into personal_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			sender_id,
			receiver_id,
			send_date,
			title,
			content,
			sender_state,
			sender_state_change_date,
			receiver_state,
			receiver_state_change_date,
			type,
			is_read,
			is_replied,
			parent_id,
			parent_ids,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{senderId},
			#{receiverId},
			#{sendDate},
			#{title},
			#{content},
			#{senderState},
			#{senderStateChangeDate},
			#{receiverState},
			#{receiverStateChangeDate},
			#{type},
			#{isRead},
			#{isReplied},
			#{parentId},
			#{parentIds},
		</trim>
	</insert>

	<insert id="insertSelective" parameterType="com.anjz.core.model.PersonalMessage">
		insert into personal_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="senderId != null">sender_id,</if>
			<if test="receiverId != null">receiver_id,</if>
			<if test="sendDate != null">send_date,</if>
			<if test="title != null">title,</if>
			<if test="content != null">content,</if>
			<if test="senderState != null">sender_state,</if>
			<if test="senderStateChangeDate != null">sender_state_change_date,</if>
			<if test="receiverState != null">receiver_state,</if>
			<if test="receiverStateChangeDate != null">receiver_state_change_date,</if>
			<if test="type != null">type,</if>
			<if test="isRead != null">is_read,</if>
			<if test="isReplied != null">is_replied,</if>
			<if test="parentId != null">parent_id,</if>
			<if test="parentIds != null">parent_ids,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="senderId != null">#{senderId},</if>
			<if test="receiverId != null">#{receiverId},</if>
			<if test="sendDate != null">#{sendDate},</if>
			<if test="title != null">#{title},</if>
			<if test="content != null">#{content},</if>
			<if test="senderState != null">#{senderState},</if>
			<if test="senderStateChangeDate != null">#{senderStateChangeDate},</if>
			<if test="receiverState != null">#{receiverState},</if>
			<if test="receiverStateChangeDate != null">#{receiverStateChangeDate},</if>
			<if test="type != null">#{type},</if>
			<if test="isRead != null">#{isRead},</if>
			<if test="isReplied != null">#{isReplied},</if>
			<if test="parentId != null">#{parentId},</if>
			<if test="parentIds != null">#{parentIds},</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.anjz.core.model.PersonalMessage">
		update personal_message
		<set>
			sender_id=#{senderId},
			receiver_id=#{receiverId},
			send_date=#{sendDate},
			title=#{title},
			content=#{content},
			sender_state=#{senderState},
			sender_state_change_date=#{senderStateChangeDate},
			receiver_state=#{receiverState},
			receiver_state_change_date=#{receiverStateChangeDate},
			type=#{type},
			is_read=#{isRead},
			is_replied=#{isReplied},
			parent_id=#{parentId},
			parent_ids=#{parentIds},
		</set>
		<where>
			  and id=#{id}
		</where>
	</update>

	

	<update id="updateByIdSelective" parameterType="com.anjz.core.model.PersonalMessage">
		update personal_message
		<set>
			<if test="senderId != null">sender_id=#{senderId},</if>
			<if test="receiverId != null">receiver_id=#{receiverId},</if>
			<if test="sendDate != null">send_date=#{sendDate},</if>
			<if test="title != null">title=#{title},</if>
			<if test="content != null">content=#{content},</if>
			<if test="senderState != null">sender_state=#{senderState},</if>
			<if test="senderStateChangeDate != null">sender_state_change_date=#{senderStateChangeDate},</if>
			<if test="receiverState != null">receiver_state=#{receiverState},</if>
			<if test="receiverStateChangeDate != null">receiver_state_change_date=#{receiverStateChangeDate},</if>
			<if test="type != null">type=#{type},</if>
			<if test="isRead != null">is_read=#{isRead},</if>
			<if test="isReplied != null">is_replied=#{isReplied},</if>
			<if test="parentId != null">parent_id=#{parentId},</if>
			<if test="parentIds != null">parent_ids=#{parentIds},</if>
		</set>
		<where>
			  and id=#{id}
		</where>
	</update>
	
<!-- 分页、条件查询、排序 -->
	<sql id="or_filters">
		<foreach collection="searchFilter.orFilters" item="orFilter" open="(" separator="or" close=")">
			<choose>
				<when test='orFilter.operator.info == "前缀模糊匹配"'>
					${orFilter.searchProperty} like concat('%', #{orFilter.value})
				</when>
				<when test='orFilter.operator.info == "前缀模糊不匹配"'>
					${orFilter.searchProperty} not like concat('%', #{orFilter.value})
				</when>
				<when test='orFilter.operator.info == "后缀模糊匹配"'>
					${orFilter.searchProperty} like concat(#{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "后缀模糊不匹配"'>
					${orFilter.searchProperty} not like concat(#{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "模糊匹配"'>
					${orFilter.searchProperty} like concat('%', #{orFilter.value}, '%')
				</when>
				<when test='orFilter.operator.info == "不匹配"'>
					${orFilter.searchProperty} not like concat('%', #{orFilter.value},'%')
				</when>
				<!-- is null is not null -->
				<when test='orFilter.operator.info == "空" or  orFilter.operator.info == "非空"'>
					${orFilter.searchProperty} ${orFilter.operator.symbol}
				</when>
				<!-- in not in -->
				<when test='orFilter.operator.info == "包含" or orFilter.operator.info == "不包含"'>
					${orFilter.searchProperty} ${orFilter.operator.symbol}
					<foreach collection="orFilter.value" item="value" open="(" separator="," close=")">
						#{value}
					</foreach>
				</when>
				<when test='orFilter.operator.info =="自定义默认的"'>
					${orFilter.value}
				</when>
				<otherwise>
					 ${orFilter.searchProperty} ${orFilter.operator.symbol} #{orFilter.value}
				</otherwise>
			</choose>
		</foreach>
	</sql>
	
	<sql id="and_filters">
		<foreach collection="searchFilter.andFilters" item="andFilter" open="(" separator="and" close=")">
			<choose>
				<when test='andFilter.operator.info == "前缀模糊匹配"'>
					${andFilter.searchProperty} like concat('%', #{andFilter.value})
				</when>
				<when test='andFilter.operator.info == "前缀模糊不匹配"'>
					${andFilter.searchProperty} not like concat('%', #{andFilter.value})
				</when>
				<when test='andFilter.operator.info == "后缀模糊匹配"'>
					${andFilter.searchProperty} like concat(#{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "后缀模糊不匹配"'>
					${andFilter.searchProperty} not like concat(#{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "模糊匹配"'>
					${andFilter.searchProperty} like concat('%', #{andFilter.value}, '%')
				</when>
				<when test='andFilter.operator.info == "不匹配"'>
					${andFilter.searchProperty} not like concat('%', #{andFilter.value},'%')
				</when>
				<!-- is null is not null -->
				<when test='andFilter.operator.info == "空" or  andFilter.operator.info == "非空"'>
					${andFilter.searchProperty} ${andFilter.operator.symbol}
				</when>
				<!-- in not in -->
				<when test='andFilter.operator.info == "包含" or andFilter.operator.info == "不包含"'>
					${andFilter.searchProperty} ${andFilter.operator.symbol}
					<foreach collection="andFilter.value" item="value" open="(" separator="," close=")">
						#{value}
					</foreach>
				</when>
				<when test='andFilter.operator.info =="自定义默认的"'>
					${andFilter.value}
				</when>
				<otherwise>
					 ${andFilter.searchProperty} ${andFilter.operator.symbol} #{andFilter.value}
				</otherwise>
			</choose>
		</foreach>
	</sql>
	
	<sql id="common_filter">
		<choose>
			<when test='searchFilter.operator.info == "前缀模糊匹配"'>
				 ${searchFilter.searchProperty} like concat('%', #{searchFilter.value})
			</when>
			<when test='searchFilter.operator.info == "前缀模糊不匹配"'>
				 ${searchFilter.searchProperty} not like concat('%',#{searchFilter.value})
			</when>
			<when test='searchFilter.operator.info == "后缀模糊匹配"'>
				 ${searchFilter.searchProperty} like concat(#{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "后缀模糊不匹配"'>
				 ${searchFilter.searchProperty} not like concat(#{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "模糊匹配"'>
				 ${searchFilter.searchProperty} like concat('%', #{searchFilter.value}, '%')
			</when>
			<when test='searchFilter.operator.info == "不匹配"'>
				${searchFilter.searchProperty} not like concat('%',#{searchFilter.value},'%')
			</when>
			<!-- is null is not null -->
			<when test='searchFilter.operator.info == "空" or  searchFilter.operator.info == "非空"'>
			    ${searchFilter.searchProperty} ${searchFilter.operator.symbol}
			</when>
			<!-- in not in -->
			<when test='searchFilter.operator.info == "包含" or searchFilter.operator.info == "不包含"'>
				 ${searchFilter.searchProperty} ${searchFilter.operator.symbol}
				<foreach collection="searchFilter.value" item="value" open="(" separator="," close=")">
					#{value}
				</foreach>
			</when>
			<when test='searchFilter.operator.info =="自定义默认的"'>
					${searchFilter.value}
			</when>
			<otherwise>
				 ${searchFilter.searchProperty} ${searchFilter.operator.symbol} #{searchFilter.value}
			</otherwise>
		</choose>
	</sql>
	
	<!-- 分页、排序 -->
	<select id="findAll" parameterType="com.anjz.base.entity.search.Searchable" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from personal_message
		<where>
			<if test="searchFilters != null and searchFilters.size > 0">
				<foreach collection="searchFilters" item="searchFilter" separator="and ">
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.OrCondition and searchFilter.orFilters.size > 0">
						<include refid="or_filters" />
					</if>
	
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.AndCondition  and searchFilter.andFilters.size > 0">
						<include refid="and_filters" />
					</if>
		
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.Condition">
						<include refid="common_filter" />
					</if>	
				</foreach>
			</if>
		</where>
	
		<if test="sort!=null">
			<if test="sort.orders != null and sort.orders.size > 0">
				order by
				<foreach collection="sort.orders" item="order" separator=",">
					 ${order.property}  ${order.direction}
				</foreach>
			</if>
		</if>
	
		<if test="page!=null">
			limit #{page.offset},#{page.size}
		</if>
	</select>
	
	<select id="count" parameterType="com.anjz.base.entity.search.Searchable" resultType="long">
		select count(*)
		from personal_message
		<where>
			<if test="searchFilters != null and searchFilters.size > 0">
				<foreach collection="searchFilters" item="searchFilter" separator="and ">
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.OrCondition and searchFilter.orFilters.size > 0">
						<include refid="or_filters" />
					</if>
	
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.AndCondition  and searchFilter.andFilters.size > 0">
						<include refid="and_filters" />
					</if>
		
					<if test="searchFilter instanceof com.anjz.base.entity.search.filter.Condition">
						<include refid="common_filter" />
					</if>	
				</foreach>
			</if>
		</where>
	</select>
	
	
	<!--批量标记为已读  -->
	<update id="markRead">
		update personal_message
		set is_read=1
		where receiver_id=#{reciverId} and id in
		<foreach collection="ids" item="id"  open="(" separator="," close=")">
			 #{id}
		</foreach>
	</update>
	
	<update id="changeSenderState">
		update personal_message
		set sender_state=#{newState},sender_state_change_date=#{changeDate}
		where sender_state in
		<foreach collection="oldStates" item="oldState"  open="(" separator="," close=")">
			 #{oldState}
		</foreach>
		and sender_state_change_date &lt;  #{expireDate}
	</update>
	
	<update id="changeReceiverState">
		update personal_message
		set receiver_state=#{newState},receiver_state_change_date=#{changeDate}
		where receiver_state in
		<foreach collection="oldStates" item="oldState"  open="(" separator="," close=")">
			 #{oldState}
		</foreach>
		and receiver_state_change_date &lt;  #{expireDate}
	</update>
	
	<update id="clearDeletedMessage">
		delete from personal_message
		where sender_state=#{deletedState}
		and receiver_state=#{deletedState}	
	</update>
</mapper>